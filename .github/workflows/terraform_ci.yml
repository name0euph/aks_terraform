name: Terraform Plan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform_ci.yml'

jobs:
  terraform_plan:
    defaults:
      run:
        working-directory: terraform

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4

      - name: Format Terraform
        id: fmt
        run: terraform fmt -check -no-color -recursive
        continue-on-error: true

      - name: Initialize Terraform
        id: init
        run: terraform init

      - name: Validate Terraform
        id: validate
        run: terraform validate
        
      - name: Plan Terraform
        id: plan
        run: |
          output=$(terraform plan -no-color)
          output="${output//$'\n'/\\n}" # 改行をエスケープ
          echo "::set-output name=stdout::${output}"
    
    outputs:
      plan_status: ${{ steps.plan.outcome }}
      plan_output: ${{ steps.plan.outputs.stdout }}

  github_comment:
    runs-on: ubuntu-latest
    needs: terraform_plan
    if: ${{ always() }}
    permissions:
      contents: read
      id-token: write 
      pull-requests: write
    steps:  
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `Terraform Plan: \`${{ needs.terraform_plan.outputs.plan_status }}\`
            <details><summary>Plan Output</summary>

            \`\`\`
            ${{ needs.terraform_plan.outputs.plan_output }}
            \`\`\`
            </details>`           
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
